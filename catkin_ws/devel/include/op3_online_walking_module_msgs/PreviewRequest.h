// Generated by gencpp from file op3_online_walking_module_msgs/PreviewRequest.msg
// DO NOT EDIT!


#ifndef OP3_ONLINE_WALKING_MODULE_MSGS_MESSAGE_PREVIEWREQUEST_H
#define OP3_ONLINE_WALKING_MODULE_MSGS_MESSAGE_PREVIEWREQUEST_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace op3_online_walking_module_msgs
{
template <class ContainerAllocator>
struct PreviewRequest_
{
  typedef PreviewRequest_<ContainerAllocator> Type;

  PreviewRequest_()
    : control_cycle(0.0)
    , lipm_height(0.0)  {
    }
  PreviewRequest_(const ContainerAllocator& _alloc)
    : control_cycle(0.0)
    , lipm_height(0.0)  {
  (void)_alloc;
    }



   typedef double _control_cycle_type;
  _control_cycle_type control_cycle;

   typedef double _lipm_height_type;
  _lipm_height_type lipm_height;





  typedef boost::shared_ptr< ::op3_online_walking_module_msgs::PreviewRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::op3_online_walking_module_msgs::PreviewRequest_<ContainerAllocator> const> ConstPtr;

}; // struct PreviewRequest_

typedef ::op3_online_walking_module_msgs::PreviewRequest_<std::allocator<void> > PreviewRequest;

typedef boost::shared_ptr< ::op3_online_walking_module_msgs::PreviewRequest > PreviewRequestPtr;
typedef boost::shared_ptr< ::op3_online_walking_module_msgs::PreviewRequest const> PreviewRequestConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::op3_online_walking_module_msgs::PreviewRequest_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::op3_online_walking_module_msgs::PreviewRequest_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace op3_online_walking_module_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'op3_online_walking_module_msgs': ['/home/benjamin/ROCO318/catkin_ws/src/ROBOTIS-OP3-msgs/op3_online_walking_module_msgs/msg'], 'sensor_msgs': ['/opt/ros/kinetic/share/sensor_msgs/cmake/../msg'], 'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg'], 'geometry_msgs': ['/opt/ros/kinetic/share/geometry_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::op3_online_walking_module_msgs::PreviewRequest_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::op3_online_walking_module_msgs::PreviewRequest_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::op3_online_walking_module_msgs::PreviewRequest_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::op3_online_walking_module_msgs::PreviewRequest_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::op3_online_walking_module_msgs::PreviewRequest_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::op3_online_walking_module_msgs::PreviewRequest_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::op3_online_walking_module_msgs::PreviewRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "5dd8c29c2c1ccae01b0503604675335f";
  }

  static const char* value(const ::op3_online_walking_module_msgs::PreviewRequest_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x5dd8c29c2c1ccae0ULL;
  static const uint64_t static_value2 = 0x1b0503604675335fULL;
};

template<class ContainerAllocator>
struct DataType< ::op3_online_walking_module_msgs::PreviewRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "op3_online_walking_module_msgs/PreviewRequest";
  }

  static const char* value(const ::op3_online_walking_module_msgs::PreviewRequest_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::op3_online_walking_module_msgs::PreviewRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "float64 control_cycle\n\
float64 lipm_height\n\
";
  }

  static const char* value(const ::op3_online_walking_module_msgs::PreviewRequest_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::op3_online_walking_module_msgs::PreviewRequest_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.control_cycle);
      stream.next(m.lipm_height);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct PreviewRequest_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::op3_online_walking_module_msgs::PreviewRequest_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::op3_online_walking_module_msgs::PreviewRequest_<ContainerAllocator>& v)
  {
    s << indent << "control_cycle: ";
    Printer<double>::stream(s, indent + "  ", v.control_cycle);
    s << indent << "lipm_height: ";
    Printer<double>::stream(s, indent + "  ", v.lipm_height);
  }
};

} // namespace message_operations
} // namespace ros

#endif // OP3_ONLINE_WALKING_MODULE_MSGS_MESSAGE_PREVIEWREQUEST_H
